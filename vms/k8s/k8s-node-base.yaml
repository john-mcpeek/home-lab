## template: jinja
#Cloud-config
merge_how:
  - name: list
    settings: [ append ]
  - name: dict
    settings: [ no_replace, recurse_list ]

hostname: ${NODE_HOST_NAME}

package_update: true
package_upgrade: true
package_reboot_if_required: true

apt:
  preserve_sources_list: true
  sources:
    docker:
      source: deb [arch="amd64" signed-by=$KEY_FILE] https://download.docker.com/linux/ubuntu $RELEASE stable
      keyid: 8D81803C0EBFCD88
    kubernetes:
      source: deb [signed-by=$KEY_FILE] https://pkgs.k8s.io/core:/stable:/v1.34/deb/ /
      keyid: 234654DA9A296436
      keyserver: https://pkgs.k8s.io/core:/stable:/v1.34/deb/Release.key

packages:
  - containerd.io
  - kubelet
  - kubeadm
  - kubectl

write_files:
  - path: /etc/crictl.yaml
    permissions: '0755'
    content: |
      runtime-endpoint: unix:///run/containerd/containerd.sock
      image-endpoint: unix:///run/containerd/containerd.sock
      timeout: 2                   # (default: 2s)
      debug: false                 # (default: false)
      pull-image-on-create: false  # (default: false)
      disable-pull-on-run: false   # (default: false)

runcmd:
  - swapoff -a
  - systemctl mask swap.img.swap

  # sysctl params required by setup, params persist across reboots
  - echo "net.ipv4.ip_forward = 1" | tee /etc/sysctl.d/k8s.conf
  # Apply sysctl params without a reboot
  - sysctl --system

  - mkdir -p /etc/containerd
  - containerd config default | tee /etc/containerd/config.toml >/dev/null
  - sed -i 's/SystemdCgroup = false/SystemdCgroup = true/' /etc/containerd/config.toml
  - sed -i 's/registry.k8s.io\/pause:3.8/registry.k8s.io\/pause:3.10/' /etc/containerd/config.toml
  - systemctl restart containerd

  # Lock Kubernetes components to prevent drift
  - apt-mark hold kubelet kubeadm kubectl
