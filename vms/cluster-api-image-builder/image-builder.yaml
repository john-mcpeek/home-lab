#Cloud-config
merge_how:
  - name: list
    settings: [ append ]
  - name: dict
    settings: [ no_replace, recurse_list ]

hostname: ${HOST_NAME}

package_update: true
package_upgrade: true
package_reboot_if_required: true

apt:
  preserve_sources_list: true
  sources:
    docker:
      source: deb [arch="amd64" signed-by=$KEY_FILE] https://download.docker.com/linux/ubuntu $RELEASE stable
      keyid: 8D81803C0EBFCD88

packages:
  - git
  - docker-ce
  - docker-ce-cli
  - containerd.io
  - docker-buildx-plugin

write_files:
  # Build Kubernetes image builder Docker image.
  - path: /usr/local/sbin/capi-image-builder.sh
    owner: root:root
    permissions: '0755'
    content: |
      #!/usr/bin/env bash
      set -euo pipefail
      
      cd /cluster-api
      
      docker build . -t image-builder-with-pve-crt
      
      docker run -it --rm --net=host --env-file proxmox.env \
        -v ./proxmox_packer_overrides.json:/home/imagebuilder/proxmox_packer_overrides.json \
        -v /cluster-api:/home/imagebuilder/images/capi/downloaded_iso_path \
        image-builder-with-pve-crt build-proxmox-ubuntu-2404-efi
  # systemd unit to run after the network is actually up
#  - path: /etc/systemd/system/capi-image-builder.service
#    owner: root:root
#    permissions: '0644'
#    content: |
#      [Unit]
#      Description=Build a custom Ubuntu 24.04 image for use with Cluster API
#      Wants=network-online.target
#      After=network-online.target
#
#      [Service]
#      Type=oneshot
#      ExecStart=/usr/local/sbin/capi-image-builder.sh
#      # Re-try once if the DNS server wasn't ready yet
#      Restart=on-failure
#      RestartSec=10
#
#      [Install]
#      WantedBy=multi-user.target
  - path: /cluster-api/proxmox.env
    permissions: '0755'
    content: |
      PROXMOX_BRIDGE=vmbr0
      PROXMOX_ISO_POOL=local
      PROXMOX_NODE=pve
      PROXMOX_STORAGE_POOL=local-lvm
      PROXMOX_TOKEN=643b49ea-82f6-47e2-888b-c03a72bddd72
      PROXMOX_URL=https://10.0.0.10:8006/api2/json
      PROXMOX_USERNAME=image-builder@pve!capi
      PACKER_VAR_FILES=proxmox_packer_overrides.json
  - path: /cluster-api/proxmox_packer_overrides.json
    permissions: '0755'
    content: |
      {
        "memory": "8192",
        "disk_format": "raw",
        "iso_url": "ubuntu-24.04.3-live-server-amd64.iso"
      }
  - path: /cluster-api/Dockerfile
    permissions: '0755'
    content: |
      FROM  registry.k8s.io/scl-image-builder/cluster-node-image-builder-amd64:v0.1.46

      # Update certificate store
      USER root
      
      # Fetch the server cert and place it in the CA certificates directory
      RUN openssl s_client -servername pve.lab -connect 10.0.0.10:8006 </dev/null 2>/dev/null | openssl x509 -outform PEM > /usr/local/share/ca-certificates/pve.lab.crt && update-ca-certificates
  
      RUN wget -q -P /home/imagebuilder https://releases.ubuntu.com/noble/ubuntu-24.04.3-live-server-amd64.iso
      
      USER imagebuilder
      # Keep original entrypoint

runcmd:
  - echo "Kubernetes image builder Docker image will be built and run on boot."
#  - mkdir -p /cluster-api
#  - cd /cluster-api
#  - git clone https://github.com/gremlin/image-builder.git
#  - git checkout thefirstofthe300/support-arm64-containerd
#  - cd image-builder/images/capi
#  - docker build . -t image-builder-with-pve-crt

#  - cd ../../..
#  - docker run -it --rm --net=host --env-file proxmox.env \
#    -v ./proxmox_packer_overrides.json:/home/imagebuilder/proxmox_packer_overrides.json \
#    -v /cluster-api:/home/imagebuilder/images/capi/downloaded_iso_path \
#    image-builder-with-pve-crt build-proxmox-ubuntu-2404-efi

#  - systemctl daemon-reload
#  - systemctl enable --now capi-image-builder.service